// 1번

#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int get_array_sum(int* x, int size)
{
	int sum = 0;

	for (int i = 0; i < 10; i++)
		printf("%d ", i + 1);
	for (int i = 0; i < size; i++)
	{
		sum += *(x+i);
	}
	return sum;
}

int main(void)
{
	int data[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	printf("print_array()\n");
	
	printf("\n배열 요소의 합 = %d", get_array_sum(data, 10));

	return 0;
}

// 2번

#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

int main(void)
{
	int data[5];
	int x;
	int* p = data;

	printf("5개의 정수를 입력하시오: ");
	scanf("%d %d %d %d %d", p, p + 1, p + 2, p + 3, p + 4);

	for (x = 4; x >= 0; x--)
	{
		printf("%d ", *(p + x));
	}

	return 0;
}

// 3번

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
void quadratic (int a, int b, int c, double* xplus, double* xminus)
{
*xminus = (-b - sqrt (b * b - 4 * a * c))/ (2 * a);
*xplus = (-b + sqrt (b * b - 4 * a * c))/ (2 * a);
}
int main (void)
{
int a = 10, b = 40, c = 30;
double xplus, xminus;
quadratic (a, b, c, &xplus, &xminus);
printf ("첫번째 실근: %lf\n", xplus);
printf ("두번째 실근 %lf\n", xminus);
return (0);
}

// 4번



// 5번

#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS
#include <stdlib.h>
#define WIDTH 10
#define HEIGHT 10
void brighten_image(char* p, int n);
void darken_image(char* p, int n);
void print_image(char* p, int n);
int main(void)
{
	char image[HEIGHT * WIDTH] = {
	0,0,0,0,9,0,0,0,0,0,
	0,0,0,9,9,0,0,0,0,0,
	0,0,9,0,9,0,0,0,0,0,
	0,0,0,0,8,0,0,0,0,0,
	0,0,0,0,9,0,0,0,0,0,
	0,0,0,0,7,0,0,0,0,0,
	0,0,0,0,8,0,0,0,0,0,
	0,0,0,0,9,0,0,0,0,0,
	0,0,0,0,9,0,0,0,0,0,
	0,0,6,6,9,7,7,0,0,0 };
	darken_image(image, WIDTH, HEIGHT);
	print_image(image, WIDTH, HEIGHT);
	return 0;
}
void darken_image(char* p, int w, int h)
{
	int i;
	int n = w * h;
	for (i = 0; i < n; i++)
		if (p[i] > 0) p[i]--;
}
void brighten_image(char* p, int w, int h)
{
	int i;
	int n = w * h;
	for (i = 0; i < n; i++)
		if (p[i] < 9) p[i]++;
}
void print_image(char* p, int w, int h)
{
	int i, k;
	for (i = 0; i < HEIGHT; i++) {
		for (k = 0; k < WIDTH; k++) {
			printf("%d ", p[i * WIDTH + k]);
		}
		printf("\n");
	}
}
